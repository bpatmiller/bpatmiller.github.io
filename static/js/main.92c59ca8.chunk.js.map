{"version":3,"sources":["useRouter.tsx","components/ColorModeButton.tsx","components/Logo.tsx","components/Layout.tsx","components/ContentGrid.tsx","Home.tsx","components/Writeup.tsx","Fractalize.tsx","Argan.tsx","Chess.tsx","Gfm.tsx","theme.ts","ltbg.svg","dkbg.svg","components/Background.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["useRouter","useContext","__RouterContext","ColorModeButton","useColorMode","toggleColorMode","colorMode","size","onClick","Logo","location","transitions","useTransition","key","pathname","from","opacity","transform","enter","config","tension","style","item","div","href","height","margin","viewBox","xmlns","fill","id","d","offset","stopColor","gradientTransform","fontSize","Layout","props","width","flexDirection","justify","align","w","p","grow","overflow","children","AnimatedBox","animated","Box","ContentGrid","contents","map","x","title","link","img","wrap","maxWidth","ContentGridItem","useState","isHovered","setIsHovered","imgProps","useSpring","className","boxSize","m","mb","borderRadius","h","rounded","onMouseEnter","onMouseLeave","concat","fit","src","entries","Home","genColor","tagName","colors","charCodeAt","length","Writeup","direction","gridColumnGap","tags","colorScheme","fontStyle","date","short","options","overrides","h1","component","Heading","h2","mt","h3","Text","Image","Flex","padding","markdown","frac_props","Fractalize","gan_props","Argan","chess_props","Chess","gfm_props","Gfm","theme","extendTheme","pink","red","teal","cyan","purple","green","orange","styles","global","body","color","mode","bg","boxShadow","Background","_","backgroundImage","ltbg","dkbg","backgroundColor","backgroundRepeat","backgroundAttachment","backgroundSize","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.92c59ca8.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { __RouterContext } from \"react-router\";\n\nconst useRouter = () => {\n  return useContext(__RouterContext);\n};\n\nexport default useRouter;\n","import React from \"react\";\nimport { useColorMode } from \"@chakra-ui/react\";\nimport { IoMdMoon } from \"react-icons/io\";\nimport { ColorModeProps } from \"./util\";\n\nconst ColorModeButton: React.FC = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <IoMdMoon\n      size=\"2em\"\n      // color={colorMode === \"light\" ? \"black\" : \"white\"}\n      onClick={() => toggleColorMode()}\n    />\n  );\n};\n\nexport default ColorModeButton;\n","import React, { useState } from \"react\";\nimport { Link, Box, Container, useColorMode } from \"@chakra-ui/react\";\nimport { animated, useSpring, useTransition } from \"@react-spring/web\";\nimport useRouter from \"../useRouter\";\n\nconst Logo = () => {\n  const { location } = useRouter();\n  const transitions = useTransition(location, {\n    key: location.pathname,\n    from: {\n      opacity: location.pathname === \"/\" ? -1 : 1,\n      transform:\n        location.pathname === \"/\" ? \"rotate(-90deg)\" : \"rotate(105deg)\",\n    },\n    enter: {\n      opacity: 1,\n      transform: \"rotate(105deg)\",\n    },\n    config: { tension: 120 },\n  });\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return transitions((style, item) => {\n    return (\n      <animated.div key={item.key} style={style}>\n        <Link href=\"/\">\n          <svg\n            height=\"96px\"\n            margin=\"auto\"\n            viewBox=\"0 0 500 500\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill={colorMode === \"light\" ? \"black\" : \"white\"}\n          >\n            <defs>\n              <path\n                id=\"textCurve\"\n                d=\"M243.2, 382.4c-74.8,   \n                0-135.5-60.7-135.5-135.5s60.7-135.5,135.5-135.5s135.5, 60.7, 135.5,\n                135.5 S318, 382.4, 243.2, 382.4z\"\n              />\n              <linearGradient id=\"GradientV\">\n                <stop offset=\"0\" stopColor=\"#36a126\" />\n                <stop offset=\"1\" stopColor=\"#fc466b\" />\n              </linearGradient>\n              <linearGradient id=\"GradientH\" gradientTransform=\"rotate(90)\">\n                <stop offset=\"0\" stopColor=\"#090979\" />\n                <stop offset=\"1\" stopColor=\"#fcb045\" />\n              </linearGradient>\n            </defs>\n\n            {/* <mask id=\"Mask\"> */}\n            <text fontSize=\"104px\">\n              <textPath fill=\"current\" href=\"#textCurve\">\n                Brendan P Miller ***\n              </textPath>\n            </text>\n            {/* </mask>\n            <rect\n              x=\"0\"\n              y=\"0\"\n              width=\"500\"\n              height=\"500\"\n              fill=\"white\"\n              mask=\"url(#Mask)\"\n            ></rect> */}\n          </svg>\n        </Link>\n      </animated.div>\n    );\n  });\n};\n\nexport { Logo };\n","import { Box, Container, Flex, Link } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { IoLogoGithub } from \"react-icons/io\";\nimport ColorModeButton from \"./ColorModeButton\";\nimport { Logo } from \"./Logo\";\nimport { ColorModeProps } from \"./util\";\nimport { useColorMode } from \"@chakra-ui/react\";\n\ninterface LayoutProps {\n  children: JSX.Element;\n  colormode: ColorModeProps;\n}\n\nexport const Layout: React.FC<LayoutProps> = (props) => {\n  return (\n    <Flex\n      width=\"100%\"\n      height=\"100vh\"\n      flexDirection={[\"column\", \"column\", \"column\", \"row\", \"row\"]}\n    >\n      <Flex\n        flexDirection=\"row\"\n        justify=\"center\"\n        align=\"flex-start\"\n        height={[32, 32, 32, \"100%\", \"100%\"]}\n        w={[\"100%\", \"100%\", \"100%\", \"156px\", \"256px\"]}\n      >\n        <Flex\n          p={0}\n          flexDirection={[\"row\", \"row\", \"row\", \"column\", \"column\"]}\n          align=\"center\"\n        >\n          <Box p={4}>\n            <Logo />\n          </Box>\n          <Box p={4}>\n            <Link href=\"https://github.com/bpatmiller\">\n              <IoLogoGithub size=\"2em\" />\n            </Link>\n          </Box>\n          <Box p={4}>\n            <ColorModeButton />\n          </Box>\n        </Flex>\n      </Flex>\n\n      <Flex\n        p={0}\n        height=\"100%\"\n        grow={9}\n        overflow=\"hide\"\n        justify={[\"center\", \"center\", \"center\", \"flex-start\", \"flex-start\"]}\n      >\n        {props.children}\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex, Image, Box, Text, LinkBox, LinkOverlay } from \"@chakra-ui/react\";\nimport { useSpring, animated } from \"react-spring\";\nimport React, { useState } from \"react\";\n\nconst AnimatedBox = animated(Box);\n\ninterface ContentGridProps {\n  contents: ContentGridItemProps[];\n}\n\ninterface ContentGridItemProps {\n  title: string;\n  link: string;\n  img: string;\n}\n\nconst ContentGrid = (props: ContentGridProps) => {\n  const children = props.contents.map((x) => (\n    <ContentGridItem title={x.title} link={x.link} img={x.img} />\n  ));\n  return (\n    <Flex\n      margin=\"auto\"\n      wrap=\"wrap\"\n      justify=\"space-around\"\n      align=\"center\"\n      maxWidth=\"1200px\"\n      height=\"100%\"\n      p={4}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nconst ContentGridItem = (props: ContentGridItemProps) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const imgProps = useSpring({\n    transform: isHovered ? \"translate(-10px,-10px)\" : \"translate(0px,0px)\",\n  });\n\n  return (\n    <AnimatedBox\n      className=\"shadowed\"\n      boxSize={[\"sm\", \"sm\", \"sm\", \"sm\", \"md\"]}\n      m={0}\n      mb={[10, 10, 10, 0, 0]}\n      style={imgProps}\n      overflow=\"hidden\"\n      borderRadius=\"lg\"\n    >\n      <LinkBox\n        className=\"caption-container\"\n        h=\"100%\"\n        w=\"100%\"\n        rounded=\"md\"\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <LinkOverlay href={\"/#\".concat(props.link)}>\n          <Image\n            fit=\"cover\"\n            h=\"calc(100% - 3em)\"\n            w=\"100%\"\n            src={props.img}\n          ></Image>\n\n          <Flex w=\"100%\" p={1} justify=\"center\" align=\"center\">\n            <Text className=\"caption\" fontSize=\"2xl\">\n              {props.title}\n            </Text>\n          </Flex>\n        </LinkOverlay>\n      </LinkBox>\n    </AnimatedBox>\n  );\n};\n\nexport { ContentGrid, ContentGridItem };\n","import * as React from \"react\";\n\nimport { ContentGrid } from \"./components/ContentGrid\";\n\nconst entries = [\n  { title: \"Fractalize.JS\", link: \"fractalize\", img: \"/frac.png\" },\n  { title: \"Audio Reactive GAN\", link: \"argan\", img: \"/gan.jpg\" },\n  { title: \"Chessboard\", link: \"chess\", img: \"/chess.png\" },\n  { title: \"Multiple Interacting Fluids\", link: \"gfm2d\", img: \"/gfm2d.png\" },\n];\n\nexport const Home = () => {\n  return <ContentGrid contents={entries} />;\n};\n","import { Flex, Heading, Box, Text, Badge, Image } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n\ninterface MediaDisplayProps {\n  type: string;\n  src: string;\n}\nconst MediaDisplay: React.FC<MediaDisplayProps> = (\n  props: MediaDisplayProps\n) => {\n  if (props.type === \"image\") {\n    return <Image src={props.src} />;\n  } else {\n    return (\n      <iframe\n        src={props.src}\n        frameBorder=\"0\"\n        allow=\"autoplay; encrypted-media\"\n        allowFullScreen\n        title=\"video\"\n      />\n    );\n  }\n};\n\ninterface WriteupProps {\n  title: string;\n  markdown: string;\n  short: string;\n  date: string;\n  tags: string[];\n}\n\nconst genColor = (tagName: string) => {\n  const colors = [\"cyan\", \"pink\", \"green\", \"orange\", \"red\", \"purple\"];\n  const hash = tagName.charCodeAt(0) % colors.length;\n  return colors[hash];\n};\n\nconst Writeup = (props: WriteupProps) => {\n  return (\n    <Flex margin=\"auto\" maxWidth={800} p={8} direction=\"column\" align=\"basline\">\n      <Flex justify=\"space-between\" align=\"baseline\" gridColumnGap={8}>\n        <Box>\n          <Heading>{props.title}</Heading>\n        </Box>\n        <Box>\n          {props.tags.map((x: string) => (\n            <Badge colorScheme={genColor(x)} m={1}>\n              {x}\n            </Badge>\n          ))}\n        </Box>\n      </Flex>\n\n      <Box className=\"subhead\" mb={4} fontStyle=\"italic\">\n        {props.date} - {props.short}\n      </Box>\n\n      <Markdown\n        options={{\n          overrides: {\n            h1: {\n              component: Heading,\n            },\n            h2: {\n              component: Heading,\n              props: {\n                fontSize: \"1.5em\",\n                mt: 4,\n              },\n            },\n            h3: {\n              component: Heading,\n              props: {\n                fontSize: \"1em\",\n              },\n            },\n            p: {\n              component: Text,\n            },\n            Image: {\n              component: Image,\n            },\n            Flex: {\n              component: Flex,\n              props: {\n                margin: \"auto\",\n                justify: \"center\",\n                align: \"center\",\n                padding: 4,\n              },\n            },\n          },\n        }}\n      >\n        {props.markdown}\n      </Markdown>\n    </Flex>\n  );\n};\n\nexport type { WriteupProps };\nexport { Writeup };\n","import React from \"react\";\nimport { Writeup, WriteupProps } from \"./components/Writeup\";\n\nconst markdown = `\n\n## Motivation\n\nThe aim of the project was to produce dynamic art from ordinary images.\n\n## Image Processing Pipeline\n\n## Animation\n<Flex>\n<iframe width='720' height='540' src='https://www.youtube.com/embed/jaG-7IOh0d0'/>\n</Flex>\n`;\n\nconst frac_props: WriteupProps = {\n  title: \"Fractalize.JS\",\n  short:\n    \"A tool for generating complex images composed of Julia Sets, in browser\",\n  markdown: markdown,\n  date: \"2021\",\n  tags: [\"ML\", \"Fractals\", \"Web\", \"JS\"],\n};\n\nexport const Fractalize = () => {\n  return <Writeup {...frac_props}></Writeup>;\n};\n","import React from \"react\";\nimport { Writeup, WriteupProps } from \"./components/Writeup\";\n\nconst gan_props: WriteupProps = {\n  title: \"Audio Reactive GAN\",\n  markdown: \"\",\n  short:\n    \"A series of audio/visual pieces generated using NVIDIA's stylegan2 and a custom built music analysis tool\",\n  date: \"2021\",\n  tags: [\"ML\", \"Audio\", \"Python\"],\n};\n\nexport const Argan = () => {\n  return <Writeup {...gan_props}></Writeup>;\n};\n","import React from \"react\";\nimport { Writeup, WriteupProps } from \"./components/Writeup\";\n\nconst chess_props: WriteupProps = {\n  title: \"Chess\",\n  markdown: \"\",\n  short: \"A simple chessboard with hand-drawn pieces and eclectic art style\",\n  date: \"2021\",\n  tags: [\"Frontend\", \"Web\", \"JS\"],\n};\n\nexport const Chess = () => {\n  return <Writeup {...chess_props}></Writeup>;\n};\n","import React from \"react\";\nimport { Writeup, WriteupProps } from \"./components/Writeup\";\n\nconst gfm_props: WriteupProps = {\n  title: \"Multiple Interacting Fluids\",\n  markdown: \"\",\n  short:\n    \"Simulation of multiple interacting fluids (with varying density, chemical reactions, and fluid boundary projection) in 2-dimensions. Part of a semester long undergraduate reading and research course on fluid simulation .\",\n  date: \"2019\",\n  tags: [\"Fluid Simulation\", \"Python\"],\n};\n\nexport const Gfm = () => {\n  return <Writeup {...gfm_props}></Writeup>;\n};\n","import { extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nconst theme = extendTheme({\n  colors: {\n    pink: {\n      \"50\": \"#F7EEEF\",\n      \"100\": \"#E8CED2\",\n      \"200\": \"#DAAFB6\",\n      \"300\": \"#CB8F99\",\n      \"400\": \"#BD707C\",\n      \"500\": \"#AE5160\",\n      \"600\": \"#8C404D\",\n      \"700\": \"#693039\",\n      \"800\": \"#462026\",\n      \"900\": \"#231013\",\n    },\n    red: {\n      \"50\": \"#FAECEA\",\n      \"100\": \"#F1CAC5\",\n      \"200\": \"#E8A9A0\",\n      \"300\": \"#E0877B\",\n      \"400\": \"#D76556\",\n      \"500\": \"#CE4331\",\n      \"600\": \"#A53627\",\n      \"700\": \"#7C281D\",\n      \"800\": \"#521B14\",\n      \"900\": \"#290D0A\",\n    },\n    teal: {\n      \"50\": \"#ECF9F7\",\n      \"100\": \"#C9EEE9\",\n      \"200\": \"#A6E2DA\",\n      \"300\": \"#84D7CC\",\n      \"400\": \"#61CCBD\",\n      \"500\": \"#3EC1AF\",\n      \"600\": \"#329A8C\",\n      \"700\": \"#257469\",\n      \"800\": \"#194D46\",\n      \"900\": \"#0C2723\",\n    },\n    cyan: {\n      \"50\": \"#E8F4FC\",\n      \"100\": \"#BFE1F7\",\n      \"200\": \"#97CEF2\",\n      \"300\": \"#6EBBED\",\n      \"400\": \"#45A8E8\",\n      \"500\": \"#1C94E3\",\n      \"600\": \"#1677B6\",\n      \"700\": \"#115988\",\n      \"800\": \"#0B3B5B\",\n      \"900\": \"#061E2D\",\n    },\n    purple: {\n      \"50\": \"#F0EDF7\",\n      \"100\": \"#D6CDE9\",\n      \"200\": \"#BCADDC\",\n      \"300\": \"#A28DCE\",\n      \"400\": \"#876DC0\",\n      \"500\": \"#6D4DB2\",\n      \"600\": \"#573E8E\",\n      \"700\": \"#412E6B\",\n      \"800\": \"#2C1F47\",\n      \"900\": \"#160F24\",\n    },\n    green: {\n      \"50\": \"#EDF8EF\",\n      \"100\": \"#CCEBD3\",\n      \"200\": \"#ABDEB7\",\n      \"300\": \"#8AD19B\",\n      \"400\": \"#69C47F\",\n      \"500\": \"#48B763\",\n      \"600\": \"#3A9250\",\n      \"700\": \"#2B6E3C\",\n      \"800\": \"#1D4928\",\n      \"900\": \"#0E2514\",\n    },\n    orange: {\n      \"50\": \"#FCF0E9\",\n      \"100\": \"#F6D4C1\",\n      \"200\": \"#F0B999\",\n      \"300\": \"#EA9E70\",\n      \"400\": \"#E58248\",\n      \"500\": \"#DF6720\",\n      \"600\": \"#B2521A\",\n      \"700\": \"#863E13\",\n      \"800\": \"#59290D\",\n      \"900\": \"#2D1506\",\n    },\n  },\n  styles: {\n    global: (props) => ({\n      body: {\n        color: mode(\"gray.900\", \"gray.50\")(props),\n        bg: mode(\"gray.50\", \"gray.900\")(props),\n      },\n      \".shadowed\": {\n        boxShadow: mode(\n          \"6px 6px 8px 2px #A0AEC0\",\n          \"6px 6px 8px 2px black\"\n        )(props),\n      },\n      \".caption\": {\n        color: mode(\"gray.900\", \"gray.50\")(props),\n      },\n      \".caption-container\": {\n        bg: mode(\"gray.50\", \"gray.700\")(props),\n      },\n      \".subhead\": {\n        color: mode(\"gray.700\", \"gray.200\")(props),\n      },\n    }),\n  },\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/ltbg.56aa18f5.svg\";","export default __webpack_public_path__ + \"static/media/dkbg.71d4cbf1.svg\";","import { useColorMode } from \"@chakra-ui/color-mode\";\nimport React from \"react\";\n\nimport ltbg from \"../ltbg.svg\";\nimport dkbg from \"../dkbg.svg\";\n\nconst Background = ({ children }: any) => {\n  const { colorMode, _ } = useColorMode();\n\n  const style = {\n    backgroundImage: colorMode === \"light\" ? `url(${ltbg})` : `url(${dkbg})`,\n    backgroundColor: colorMode === \"light\" ? \"#F7FAFC\" : \"#171923\",\n\n    backgroundRepeat: \"repeat\",\n    backgroundAttachment: \"fixed\",\n    overflow: \"scroll\",\n    backgroundSize: \"auto\",\n  };\n\n  return (\n    <div className=\"bg-container\" style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default Background;\n","import * as React from \"react\";\nimport {\n  ChakraProvider,\n  ColorModeProvider,\n  extendTheme,\n} from \"@chakra-ui/react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport useRouter from \"./useRouter\";\nimport { useTransition, animated } from \"react-spring\";\n\nimport myTheme from \"./theme\";\nimport { Layout } from \"./components/Layout\";\nimport { Home } from \"./Home\";\nimport { Fractalize } from \"./Fractalize\";\nimport { Argan } from \"./Argan\";\nimport { Chess } from \"./Chess\";\nimport { Gfm } from \"./Gfm\";\nimport theme from \"./theme\";\nimport Background from \"./components/Background\";\n\nexport const App = () => {\n  const { location } = useRouter();\n  const transitions = useTransition(location, {\n    key: location.pathname,\n    from: {\n      opacity: 0,\n      transform:\n        location.pathname === \"/\"\n          ? \"translate(0px,-35%)\"\n          : \"translate(0px,100%)\",\n    },\n    enter: { opacity: 1, transform: \"translate(0px, 0px)\" },\n    config: {\n      tension: 120,\n    },\n  });\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Background>\n        <Layout>\n          {transitions((style, item) => {\n            return (\n              <animated.div key={item.key} style={style}>\n                <Switch>\n                  <Route exact path=\"/\" component={Home}></Route>\n                  <Route\n                    exact\n                    path=\"/fractalize\"\n                    component={Fractalize}\n                  ></Route>\n                  <Route exact path=\"/argan\" component={Argan}></Route>\n                  <Route exact path=\"/chess\" component={Chess}></Route>\n                  <Route exact path=\"/gfm2d\" component={Gfm}></Route>\n                </Switch>\n              </animated.div>\n            );\n          })}\n        </Layout>\n      </Background>\n    </ChakraProvider>\n  );\n};\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={\"/\"}>\n      <ColorModeScript />\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}